
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Итого = Товары.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	#Область Движения	
	// регистр Хозрасчетный  регистр
	
	Движения.Хозрасчетный.Записывать = Истина;
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Выручка;
	Движение.Период = Дата;
	Движение.Сумма = Итого;
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Покупатель;
	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Покупатель;
	
	// регистр Хозрасчетный  Хозрасчетный Дт Выручка - Кт Товары на склада
	
	Движения.Хозрасчетный.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Хозрасчетный.Добавить();
		Движение.СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Движение.СчетКт = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
		Движение.Период = Дата;
		Движение.ВалютаКт = Валюта;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ТекСтрокаТовары.Номенклатура;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ТекСтрокаТовары.Номенклатура;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склад] = Склад;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Партия] = Ссылка;
	КонецЦикла;
	
	
	// регистр ОбъемПродаж 
	Движения.ОбъемПродаж.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОбъемПродаж.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Партия = Ссылка;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Склад = Склад;
	КонецЦикла;
	
	#КонецОбласти
	
	#Область БухУчет
	
	// Списание себестоимости в БухУчете
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровТовары.Количество КАК Количество,
	|	РеализацияТоваровТовары.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_ДокТЧ
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	|ГДЕ
	|	РеализацияТоваровТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДокТЧ.Номенклатура КАК Номенклатура,
	|	ВТ_ДокТЧ.Количество КАК Количество,
	|	ВТ_ДокТЧ.Сумма КАК Стоимость,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиПоСклИХарк.КоличествоОстатокДт, 0) КАК КоличествоОстатокДтПоХаракт,
	|	ХозрасчетныйОстаткиПоСклИХарк.Субконто3 КАК Субконто3,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиПоВСЕМСкладИХарк.КоличествоОстатокДт, 0) КАК КоличествоОстатокДтПоВсем,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиПоВСЕМСкладИХарк.СуммаОстатокДт, 0) КАК СуммаОстатокДтПоВсем,
	|	ВТ_ДокТЧ.Номенклатура.Представление КАК НоменклатураПредставление
	|ИЗ
	|	ВТ_ДокТЧ КАК ВТ_ДокТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&МоментВремени,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах),
	|				&СубконтоТовары,
	|				Субконто1 В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ВТ_ДокТЧ.Номенклатура КАК Номенклатура
	|						ИЗ
	|							ВТ_ДокТЧ КАК ВТ_ДокТЧ)
	|					И Субконто2 = &Склад) КАК ХозрасчетныйОстаткиПоСклИХарк
	|		ПО ВТ_ДокТЧ.Номенклатура = ХозрасчетныйОстаткиПоСклИХарк.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&МоментВремени,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах),
	|				&СубконтоТовары,
	|				Субконто1 В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТ_ДокТЧ.Номенклатура КАК Номенклатура
	|					ИЗ
	|						ВТ_ДокТЧ КАК ВТ_ДокТЧ)) КАК ХозрасчетныйОстаткиПоВСЕМСкладИХарк
	|		ПО ВТ_ДокТЧ.Номенклатура = ХозрасчетныйОстаткиПоВСЕМСкладИХарк.Субконто1
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(Стоимость),
	|	СУММА(КоличествоОстатокДтПоХаракт),
	|	МАКСИМУМ(КоличествоОстатокДтПоВсем),
	|	МАКСИМУМ(СуммаОстатокДтПоВсем)
	|ПО
	|	Номенклатура";
	СубконтоТовары = Новый Массив;
	СубконтоТовары.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	СубконтоТовары.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Склад);
	СубконтоТовары.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Партия);
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("СубконтоТовары", СубконтоТовары);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстатокДтПоХаракт Тогда
			
			Сообщить("Недостаточно товара " + ВыборкаНоменклатура.Номенклатура);
			Отказ = Истина;
			
		Иначе
			Себестоимость1шт = ВыборкаНоменклатура.СуммаОстатокДтПоВсем / ВыборкаНоменклатура.КоличествоОстатокДтПоВсем;
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			ОсталосьСписать = ВыборкаНоменклатура.Количество;
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
			
			
			
			Пока ВыборкаДетальныеЗаписи.Следующий() И ОсталосьСписать>0  Цикл
				// регистр Хозрасчетный Дт Выручка - Кт Товары на склада
				
				Движение = Движения.Хозрасчетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Хозрасчетный.Выручка;
				Движение.СчетКт = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
				Движение.Период = Дата;
				//Расчет себестоимости
				
				Движение.КоличествоКт = мин(ОсталосьСписать,ВыборкаДетальныеЗаписи.КоличествоОстатокДтПоХаракт);
				
				Если Движение.КоличествоКт = ВыборкаНоменклатура.КоличествоОстатокДтПоВсем Тогда
					Движение.Сумма =  ВыборкаНоменклатура.СуммаОстатокДтПоВсем;
				Иначе 
					Движение.Сумма = Движение.КоличествоКт * Себестоимость1шт;
				КонецЕсли;
				Если Движение.ВалютаКт <> Справочники.Валюты.РоссийскийРубль Тогда
					Движение.ВалютнаяСуммаКт = Итого;
					Движение.Сумма = Итого * ОбработкаТабличнойЧастиСервер.ЦенаВалюты(Дата,Движение.ВалютаКт); 
				Конецесли;   
				Движение.КоличествоДт = ВыборкаДетальныеЗаписи.Количество;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ТекСтрокаТовары.Номенклатура;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склад] = Склад;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Партия] = ВыборкаДетальныеЗаписи.Субконто3;
				ОсталосьСписать = ОсталосьСписать - Движение.КоличествоКт;	
				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	#КонецОбласти
	
	
	
	// Списание Себестоимости 
	// Получение метода списания
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыУчетаСебестоимостиСрезПоследних.УчетСебестоимости КАК УчетСебестоимости
	|ИЗ
	|	РегистрСведений.ВидыУчетаСебестоимости.СрезПоследних(&Период, ) КАК ВидыУчетаСебестоимостиСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указан метод списания себестоимости в учетной политике";
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	МетодСписанияСебестоимости = Выборка.УчетСебестоимости;
	
	// удаление движения 
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.Записать();
	// Снова делаем движение
	Движения.ТоварыНаСкладах.Записывать = Истина;
	
	// Контролирование остатков	и списание себестоимости по средней 
	Если  МетодСписанияСебестоимости = Перечисления.ВидыУчетаСебестоимости.Средняя Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровТовары.Количество) КАК Количество,
		|	РеализацияТоваровТовары.Сумма КАК Сумма
		|ПОМЕСТИТЬ втТЧТовары
		|ИЗ
		|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|ГДЕ
		|	РеализацияТоваровТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровТовары.Номенклатура,
		|	РеализацияТоваровТовары.Сумма
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТЧТовары.Номенклатура КАК Номенклатура,
		|	втТЧТовары.Количество КАК Количество,
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
		|	втТЧТовары.Номенклатура.Представление КАК НоменклатураПредставление,
		|	ТоварыНаСкладахОстатки.Партия КАК Партия,
		|	втТЧТовары.Сумма КАК Сумма,
		|	ТоварыНаСкладахОстатки.Партия.Представление КАК ПартияПредставление,
		|	втТЧТовары.Номенклатура.Представление КАК НоменклатураПредставление1
		|ИЗ
		|	втТЧТовары КАК втТЧТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				&МоментВремени,
		|				Номенклатура В
		|					(ВЫБРАТЬ
		|						втТЧТовары.Номенклатура КАК Номенклатура
		|					ИЗ
		|						втТЧТовары КАК втТЧТовары)) КАК ТоварыНаСкладахОстатки
		|		ПО втТЧТовары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	СУММА(КоличествоОстаток),
		|	СУММА(СтоимостьОстаток),
		|	МАКСИМУМ(Сумма)
		|ПО
		|	Номенклатура";
		
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Склад", Склад);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.Количество > Выборка.КоличествоОстаток Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не хватает товара " + Выборка.НоменклатураПредставление + " в количестве " + (Выборка.Количество - Выборка.КоличествоОстаток);
				Сообщение.Сообщить();	
				Отказ = Истина;
				
			КонецЕсли;	
			
			Если НЕ Отказ Тогда
				ВыборкаДетальныеЗаписи = Выборка.Выбрать();
				ОсталосьСписать = Выборка.Количество;
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
					Движение = Движения.ТоварыНаСкладах.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
					Движение.Склад = Склад;
					Движение.Партия = ВыборкаДетальныеЗаписи.Партия;
					Движение.Количество = Мин(ОсталосьСписать, ВыборкаДетальныеЗаписи.КоличествоОстаток);
					
					Если Выборка.Количество = Выборка.КоличествоОстаток Тогда
						Движение.Стоимость = Выборка.СтоимостьОстаток;
					Иначе
						Движение.Стоимость = Выборка.СтоимостьОстаток / Выборка.КоличествоОстаток * Выборка.Количество;
					КонецЕсли;
					
					ОсталосьСписать = ОсталосьСписать - Движение.Количество;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
	
	#Область ЛИФОИФИФО	
	// Списание товаров по методу ФИФО или ЛИФО
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
	|	СУММА(РеализацияТоваровТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ втТЧТовары
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	|ГДЕ
	|	РеализацияТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровТовары.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТЧТовары.Номенклатура КАК Номенклатура,
	|	втТЧТовары.Количество КАК Количество,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
	|	втТЧТовары.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ТоварыНаСкладахОстатки.Партия КАК Партия
	|ИЗ
	|	втТЧТовары КАК втТЧТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&МоментВремени,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						втТЧТовары.Номенклатура КАК Номенклатура
	|					ИЗ
	|						втТЧТовары КАК втТЧТовары)) КАК ТоварыНаСкладахОстатки
	|		ПО втТЧТовары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.Партия.МоментВремени
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";
	
	Если МетодСписанияСебестоимости = Перечисления.ВидыУчетаСебестоимости.ЛИФО Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстаткиНоменклатурыОстатки.Партия.МоментВремени",
		"ОстаткиНоменклатурыОстатки.Партия.МоментВремени УБЫВ");
	КонецЕсли;
	
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстаток Тогда
			
			Отказ = Истина;
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Недостаточно товара %1 в количестве %2", 
			ВыборкаНоменклатура.НоменклатураПредставление, 
			ВыборкаНоменклатура.Количество - ВыборкаНоменклатура.КоличествоОстаток);
			Сообщение.Сообщить();
			
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоСписать = ВыборкаНоменклатура.Количество;
		
		ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Количество = Мин(КоличествоСписать, ВыборкаДетальныеЗаписи.КоличествоОстаток);
			
			Если Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда
				Себестоимость = ВыборкаДетальныеЗаписи.СтоимостьОстаток;
			Иначе
				Себестоимость = Количество / ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.СтоимостьОстаток;
			КонецЕсли;
			
			
			
			Движение = Движения.ТоварыНаСкладах.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Склад = Склад;
			Движение.Партия = ВыборкаДетальныеЗаписи.Партия;
			Движение.Количество = Количество;
			Движение.Стоимость = Себестоимость;
			
			КоличествоСписать = КоличествоСписать - Количество;
			
			Если КоличествоСписать <= 0 Тогда
				Прервать;
			КонецЕсли;
			
			
		КонецЦикла;
	КонецЦикла;
	
	#КонецОбласти	
	
КонецПроцедуры


